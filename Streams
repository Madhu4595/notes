// Java Program to count the occurrences of each character in String
		
		String input = "thanksyousomuch";
		
		Arrays.toString(input.split("")); //return type= string array
    //output: [t, h, a, n, k, s, y, o, u, s, o, m, u, c, h]
    
		Arrays.stream(input.split("")).collect(Collectors.groupingBy(s->s)); //return type= Map<String, List<String>>
    //output: {a=[a], c=[c], s=[s, s], t=[t], u=[u, u], h=[h, h], y=[y], k=[k], m=[m], n=[n], o=[o, o]}
    
		Arrays.stream(input.split("")).collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));// return type= Map<String, Long>
		//output: {a=1, c=1, s=2, t=1, u=2, h=2, y=1, k=1, m=1, n=1, o=2}
    
		//Java Program to find all duplicate elements
		Arrays.stream(input.split("")).collect(Collectors.groupingBy(Function.identity(), Collectors.counting()))
			.entrySet().stream().filter(x-> x.getValue()>1).map(Map.Entry::getKey).collect(Collectors.toList());//return type= List<String>
		//output: [s, u, h, o]
    
		// Java Program to find all unique values
		Arrays.stream(input.split("")).collect(Collectors.groupingBy(Function.identity(), Collectors.counting()))
		.entrySet().stream().filter(x-> x.getValue() == 1).map(Map.Entry::getKey).collect(Collectors.toList());//return type: List<String>
    //output: [a, c, t, y, k, m, n]
		
		//Java Program to find first non-repeat element
		Arrays.stream(input.split("")).collect(Collectors.groupingBy(Function.identity(), LinkedHashMap::new, Collectors.counting()))
		.entrySet().stream().filter(x -> x.getValue() == 1).findFirst().get().getKey();//return type: String
    //output: t
		
		//Java Program to find first repeat element
		Arrays.stream(input.split("")).collect(Collectors.groupingBy(Function.identity(), LinkedHashMap::new, Collectors.counting()))
		.entrySet().stream().filter(x -> x.getValue() > 1).findFirst().get().getKey();//return type: String
    //output: h
